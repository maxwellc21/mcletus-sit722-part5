name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx for building images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Log in to Azure using Service Principal
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 4: Initialize Terraform
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    # Step 5: Terraform Plan and Apply
    - name: Terraform Plan & Apply
      working-directory: ./terraform
      run: |
        terraform plan \
          -var="resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" \
          -var="acr_name=${{ secrets.AZURE_ACR_NAME }}" \
          -var="aks_name=${{ secrets.AZURE_AKS_NAME }}" \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="location=${{ secrets.AZURE_LOCATION }}" && \
        terraform apply -auto-approve \
          -var="resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" \
          -var="acr_name=${{ secrets.AZURE_ACR_NAME }}" \
          -var="aks_name=${{ secrets.AZURE_AKS_NAME }}" \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="location=${{ secrets.AZURE_LOCATION }}"

    # Step 6: Log in to Azure Container Registry
    - name: Log in to ACR
      run: az acr login --name ${{ secrets.AZURE_ACR_NAME }}

    # Step 7: Grant execute permissions for scripts
    - name: Grant Execute Permissions
      run: chmod +x ./scripts/*.sh

    # Step 8: Build and Push Docker images
    - name: Build and Push Docker images
      run: |
        ./scripts/build-image.sh && \
        ./scripts/push-image.sh

    # Step 9: Set up kubectl for Kubernetes
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.20.0'

    # Step 10: Get AKS credentials using Service Principal
    - name: Get AKS credentials
      run: az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_AKS_NAME }}

    # Step 11: Deploy Kubernetes Resources
    - name: Deploy Kubernetes Resources
      run: ./scripts/deploy.sh
