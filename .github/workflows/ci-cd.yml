name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Azure using Service Principal
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    # Import existing Resource Group into Terraform state if needed
    - name: Import Resource Group
      working-directory: terraform
      run: |
        if az group exists --name ${{ secrets.RESOURCE_GROUP_NAME }}; then
          terraform import azurerm_resource_group.resource_group /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP_NAME }} || true
        fi

    # Import existing Azure Container Registry into Terraform state if needed
    - name: Import ACR
      working-directory: terraform
      run: |
        if az acr show --name ${{ secrets.ACR_NAME }}; then
          terraform import azurerm_container_registry.acr /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP_NAME }}/providers/Microsoft.ContainerRegistry/registries/${{ secrets.ACR_NAME }} || true
        fi

    # Import existing Kubernetes Cluster into Terraform state if needed
    - name: Import Kubernetes Cluster
      working-directory: terraform
      run: |
        if az aks show --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} --name ${{ secrets.AKS_NAME }}; then
          terraform import azurerm_kubernetes_cluster.kubernetes_cluster /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP_NAME }}/providers/Microsoft.ContainerService/managedClusters/${{ secrets.AKS_NAME }} || true
        fi

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan

    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve

    - name: Log in to Azure Container Registry
      run: az acr login --name ${{ secrets.ACR_NAME }}

    - name: Grant Execute Permissions
      run: chmod +x ./scripts/*.sh

    - name: Build Docker images
      run: ./scripts/build-image.sh

    - name: Push Docker images
      run: ./scripts/push-image.sh

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.20.0'

    - name: Get AKS credentials using Service Principal
      run: az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} --name ${{ secrets.AKS_NAME }}

    - name: Deploy Kubernetes Resources
      run: ./scripts/deploy.sh
